# This is a basic workflow to help you get started with Actions

name: Build Weekly Xamarin Blazor

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore:
    - 'README.md'
    - '!.github\workflows\**'
  pull_request:
    branches: [ main ]
    paths:
    - '!README.md'
    - '!.github\workflows\**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allows you to run this workflow manually from the Actions tab
env:
  DOTNET_VERSION: '8.0.100-preview.2.23157.25'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-weekly-xamarin-blazor"
  build-weekly-xamarin-blazor:
    # The type of runner that the job will run on
    runs-on: windows-latest
    defaults:
      run:
        working-directory: .\src\BlazorApp

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v3
        with:
          # Optional SDK version to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x
          dotnet-version: ${{ env.DOTNET_VERSION }}
          # Whether prerelease versions should be matched with non-exact versions (for example 5.0.0-preview.6 being matched by 5, 5.0, 5.x or 5.0.x). Defaults to false if not provided.
          include-prerelease: true

      # Install Maui workload
      - name: Install Maui workload
        run: dotnet workload install maui

      # Install WebAssembly workload
      - name: Install WebAssembly workload
        run: dotnet workload install wasm-tools

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Build the project in Release mode
      - name: Build the Solution in Release mode
        run: dotnet build -c Release --no-restore
